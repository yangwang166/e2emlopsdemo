node {
    def GITREPO         = "/var/lib/jenkins/workspace/${env.JOB_NAME}"
    def GITREPOREMOTE   = "https://edge2ai@bitbucket.org/edge2ai/mlops.git"
    def GITCREDID       = "gittoken"
    def CURRENTRELEASE  = "main"
    def DBTOKEN         = "mlopstesttoken"
    def DBURL           = "https://adb-6221676154251448.8.azuredatabricks.net"
    def SCRIPTPATH      = "${GITREPO}/cicd-scripts"
    def TRAIN_NOTEBOOKPATH    = "${GITREPO}/train_notebooks"
    def DEPLOY_NOTEBOOKPATH    = "${GITREPO}/azure_deploy_nb"
    def LIBRARYPATH     = "${GITREPO}/libraries"
    def BUILDPATH       = "${GITREPO}/Builds/${env.JOB_NAME}-${env.BUILD_NUMBER}"
    def OUTFILEPATH     = "${BUILDPATH}/logs/Output"
    def TESTRESULTPATH  = "${BUILDPATH}/logs/reports/junit"
    def TRAIN_WORKSPACEPATH   = "/Shared/CICD/train_notebooks"
    def DEPLOY_WORKSPACEPATH   = "/Shared/CICD/azure_deploy_nb"
    def DBFSPATH        = "dbfs:/Libs/python"
    def CONDAPATH       = "/root/anaconda3"
    def CLUSTERID       = "0630-005856-jives605"
    def CONDAENV        = "tempenv"
    def SLACKURL        = "https://hooks.slack.com/services/T01UWPT7QBT/B01UL0NQDJB/your_token"
    def SLACKCHANNEL    = "#cicd"

    stage('Setup') {
        //cleanWs()
        echo "======================Setup=============================="
        withCredentials([string(credentialsId: DBTOKEN, variable: 'TOKEN')]) {

            sh """#!/bin/bash

                  rm -rf ./*

                  wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -nv -O miniconda.sh
                  bash miniconda.sh -b -p $WORKSPACE/miniconda

                  source $WORKSPACE/miniconda/etc/profile.d/conda.sh

                  conda config --set always_yes yes --set changeps1 no
                  conda update -q conda

                  conda create --name ${CONDAENV}  python=3.8

                  conda activate ${CONDAENV}

                  pip install requests databricks-connect databricks-cli pytest

               """
        }
    }
    stage('Checkout') { // for display purposes
        echo "======================Checkout=============================="
        echo "Pulling ${CURRENTRELEASE} Branch from Bitbucket"
        git branch: CURRENTRELEASE, credentialsId: GITCREDID, url: GITREPOREMOTE
        //git branch: CURRENTRELEASE, url: GITREPOREMOTE
    }
    stage('Deploy to Dev') {
        echo "======================Deploy to Dev=============================="
        sh """#!/bin/bash
              source $WORKSPACE/miniconda/etc/profile.d/conda.sh
              conda activate ${CONDAENV}

              # Use Databricks CLI to deploy Notebooks
              databricks --profile mlopsdev workspace import_dir -o ${TRAIN_NOTEBOOKPATH} ${TRAIN_WORKSPACEPATH}
              databricks --profile mlopsdev workspace import_dir -o ${DEPLOY_NOTEBOOKPATH} ${DEPLOY_WORKSPACEPATH}
           """
    }
    stage('Deploy to Test') {
        echo "======================Deploy to Test=============================="
        sh """#!/bin/bash
              source $WORKSPACE/miniconda/etc/profile.d/conda.sh
              conda activate ${CONDAENV}

              # Use Databricks CLI to deploy Notebooks
              databricks --profile mlopstest workspace import_dir -o ${TRAIN_NOTEBOOKPATH} ${TRAIN_WORKSPACEPATH}
              databricks --profile mlopstest workspace import_dir -o ${DEPLOY_NOTEBOOKPATH} ${DEPLOY_WORKSPACEPATH}
           """
    }
    stage('Deploy to Prod') {
        echo "======================Deploy to Prod=============================="
        sh """#!/bin/bash
              source $WORKSPACE/miniconda/etc/profile.d/conda.sh
              conda activate ${CONDAENV}

              # Use Databricks CLI to deploy Notebooks
              databricks --profile mlopsprod workspace import_dir -o ${TRAIN_NOTEBOOKPATH} ${TRAIN_WORKSPACEPATH}
              databricks --profile mlopsprod workspace import_dir -o ${DEPLOY_NOTEBOOKPATH} ${DEPLOY_WORKSPACEPATH}
           """
    }

}
